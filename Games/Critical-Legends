local Mobs = Workspace.Enemies
local MaterialGivers = Workspace.MaterialGivers
local Chests = Workspace.Chests
local Mog = {}
for i,v in next, Mobs:GetChildren() do
    if v:IsA("Folder") and v:FindFirstChild("Enemy", true) then
        for i,v in next, v:GetChildren() do
            if v:IsA("Model") and v:FindFirstChild("Model") and not table.find(Mog, tostring(v.Model.Value)) then
                table.insert(Mog, tostring(v.Model.Value))
            end
        end
    end
end

local Res = {"Damage", "Health", "Magic", "Mana", "Shield"}

local Teleport = function(A)
    Player.Character.HumanoidRootPart.CFrame = A 
end

local NoCliper = function()
    for i,v in next, Player.Character:GetDescendants() do
        if v:IsA("BasePart") then
            v.CanCollide = false
            v.Velocity = Vector3.new(0,0,0)
        end
    end
    return Player.Character
end

local Collect = function(A)
    for i,v in next, A:GetDescendants() do
        if v:IsA("TouchTransmitter") then
            firetouchinterest(Player.Character.HumanoidRootPart, v.Parent, 0)
            firetouchinterest(Player.Character.HumanoidRootPart, v.Parent, 1)
        end
    end
    return A
end
local Remote = game:GetService("ReplicatedStorage"):FindFirstChild("DamageNew", true)
local Player = game:GetService("Players").LocalPlayer
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(self, ...)
   local Args = {...}
   local Self = Args[1]
       if self == Remote and Args[1] == Player.Character and (Goes or Mobh) then
           return
       end
   return OldNameCall(self, unpack(Args))
end)

local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/LinoriaLib/main/Library.lua"))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Window = Library:CreateWindow({
    Title = MarketplaceService:GetProductInfo(game.PlaceId).Name,
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    Main = Window:AddTab('Main'), 
    Auto = Window:AddTab('Auto Delete'),
    Matics = Window:AddTab('Automatics'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('AutoFarms')
local RightGroupBox = Tabs.Main:AddRightGroupbox('Quick Misc')
local AutoDelete = Tabs.Auto:AddLeftGroupbox('Delete')

local Oh = Tabs.Matics:AddLeftGroupbox('Automatic systems')
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

LeftGroupBox:AddToggle('Mobg', {Text = 'Auto Mob', Default = false,Tooltip = '', Callback = function(A)
    Mobh = A 
    RunService.Stepped:Connect(function()
        if Mobh then
            pcall(function()
                NoCliper()
            end)
        end
    end)
    spawn(function()
        while wait() and Mobh do
            pcall(function()
                for i,v in next, Mobs:GetDescendants() do
                    if v:IsA("Model") and v:FindFirstChild("Model") and tostring(v.Model.Value) == g then
                        Teleport(CFrame.new(v.EnemyLocation.Position))  
                        break
                    end
                end
                if Workspace:FindFirstChild("CombatFolder") and Workspace:FindFirstChild("CombatFolder")[Player.Name]:FindFirstChild("SwordOrb", true) then
                    Teleport(CFrame.new(Workspace.CombatFolder[Player.Name]:FindFirstChild("SwordOrb", true):GetModelCFrame().Position + Vector3.new(0,3,0)))
                else
                    return Player
                end
            end)
        end
    end)
end})

Toggles.Mobg:OnChanged(function(State)
    Mobh = Toggles.Mobg.Value 
end)


LeftGroupBox:AddDropdown('nugger', {Values = Mog, Default = 1, Multi = false, Text = 'Mobs', Tooltip = '', Callback = function(A)
    g = A
end})

Options.nugger:OnChanged(function(S)
    g = Options.nugger.Value
end)

LeftGroupBox:AddToggle('rrr', {Text = 'GodMode', Default = false,Tooltip = '', Callback = function(A)
    Goes = A 
end})

Toggles.rrr:OnChanged(function(State)
    Goes = Toggles.rrr.Value
end)

LeftGroupBox:AddToggle('gggg', {Text = 'Auto Give Materials', Default = false,Tooltip = '', Callback = function(A)
    collet = A
    spawn(function()
        while wait() and collet do
            pcall(function()
                Collect(MaterialGivers)
                wait(5)
            end)
        end
    end)
end})

Toggles.gggg:OnChanged(function(State)
    collet = Toggles.gggg.Value
end)


LeftGroupBox:AddToggle('fffg', {Text = 'Auto Give Chests', Default = false,Tooltip = '', Callback = function(A)
    eee = A
    spawn(function()
        while wait() and eee do
            pcall(function()
                Collect(Chests)
                wait(5)
            end)
        end
    end)
end})

Toggles.fffg:OnChanged(function(State)
    eee = Toggles.fffg.Value
end)

LeftGroupBox:AddToggle('dd', {Text = 'Auto Upgrade Stats', Default = false,Tooltip = '', Callback = function(A)
    Gone = A
    spawn(function()
        while wait() and Gone do
            pcall(function()
                ReplicatedStorage.Server:FireServer("Invest",Want)
            end)
        end
    end)
end})

Toggles.dd:OnChanged(function(State)
    Gone = Toggles.dd.Value
end)

LeftGroupBox:AddDropdown('ff', {Values = Res, Default = 1, Multi = false, Text = 'Stats', Tooltip = '', Callback = function(A)
    Want = A
end})

Options.ff:OnChanged(function(S)
    Want = Options.ff.Value
end)

local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Roxsploit/R.P-Hub/main/Karrot-Esp"))()
RightGroupBox:AddToggle('ESP1', {Text = 'Esp Toggle', Default = false,Tooltip = '', Callback = function(A)
    ESP:Toggle(A)
end})
Toggles.ESP1:OnChanged(function(State)
    ESP:Toggle(Toggles.ESP1.Value)
end)

RightGroupBox:AddToggle('ESP2', {Text = 'Esp Players', Default = false,Tooltip = '', Callback = function(A)
    ESP.Players = A
end})
Toggles.ESP2:OnChanged(function(State)
    ESP.Players = Toggles.ESP2.Value
end)

RightGroupBox:AddToggle('ESP3', {Text = 'Esp Tracers', Default = false,Tooltip = '', Callback = function(A)
    ESP.Tracers = A
end})
Toggles.ESP3:OnChanged(function(State)
    ESP.Tracers = Toggles.ESP3.Value
end)

RightGroupBox:AddToggle('ESP4', {Text = 'Esp Names', Default = false,Tooltip = '', Callback = function(A)
    ESP.EspNames = A
end})
Toggles.ESP4:OnChanged(function(State)
    ESP.EspNames = Toggles.ESP4.Value
end)

RightGroupBox:AddToggle('ESP5', {Text = 'Esp Boxes', Default = false,Tooltip = '', Callback = function(A)
    ESP.Boxes = A
end})
Toggles.ESP5:OnChanged(function(State)
    ESP.Boxes = Toggles.ESP5.Value
end)

RightGroupBox:AddToggle('SSS', {Text = 'WalkSpeed Toggle',Default = false,Tooltip = '', Callback = function(A)
WS = A 
    RunService.Stepped:Connect(function()
        if WS then
            pcall(function()
                Player.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed = WalkSpeed or 16
            end)
        end
    end)
end})
Toggles.SSS:OnChanged(function(State)
    Foe = Toggles.SSS.Value 
end)
RightGroupBox:AddInput('SSF3', {Default = 'WalkSpeed',Numeric = true,Finished = false,Text = 'WalkSpeed',Tooltip = 'Numbers Only',Placeholder = 'WalkSpeed'})
Options.SSF3:OnChanged(function(State)
    WalkSpeed = Options.SSF3.Value
end)

RightGroupBox:AddToggle('EEE', {Text = 'JumpPower Toggle',Default = false,Tooltip = '', Callback = function(A)
JP = A 
    RunService.Stepped:Connect(function()
        if JP then
            pcall(function()
                local H = Player.Character:FindFirstChildWhichIsA("Humanoid")
                if H.UseJumpPower then
                    H.JumpPower = JumpPower or 50
                else
                    H.JumpHeight = JumpPower or 50
                end
            end)
        end
    end)
end})
Toggles.EEE:OnChanged(function(State)
    JP = Toggles.EEE.Value 
end)
RightGroupBox:AddInput('SSF1', {Default = 'JumpPower',Numeric = true,Finished = false,Text = 'JumpPower',Tooltip = 'Numbers Only',Placeholder = 'JumpPower'})

Options.SSF1:OnChanged(function(State)
    JumpPower = Options.SSF1.Value 
end)


RightGroupBox:AddToggle('vvS', {Text = 'Infinite Jump',Default =  InfiniteJump,Tooltip = '', Callback = function(A)
InfiniteJump = A
    UserInputService.JumpRequest:connect(function()
        if InfiniteJump then
            Player.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState("Jumping")
        end
    end)
end})

Toggles.vvS:OnChanged(function()
    InfiniteJump = Toggles.vvS.Value 
end)

RightGroupBox:AddToggle('eeS', {Text = 'NoClip',Default =  Sex2,Tooltip = '', Callback = function(A)
noclips = A
    RunService.Stepped:connect(function(v)
        if noclips then
            pcall(function()
                NoClip2(Player.Character)
            end)
        end
    end)
end})
Toggles.eeS:OnChanged(function()
    noclips = Toggles.eeS.Value 
end)

RightGroupBox:AddToggle('aaS', {Text = 'H Fly',Default =  Sex,Tooltip = 'Fly By Pressing H', Callback = function(A)
Sex = A
local Max = 0
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(
    function(k)
        if k:lower() == "h" and Sex then
            Max = Max + 1
            getgenv().Fly = false
            if Sex then
                local T = LP.Character:FindFirstChild("UpperTorso",true) or LP.Character:FindFirstChild("HumanoidRootPart",true)
                local S = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local S2 = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local SPEED = 5
                local function FLY()
                    getgenv().Fly = true
                    local BodyGyro = Instance.new("BodyGyro", T)
                    local BodyVelocity = Instance.new("BodyVelocity", T)
                    BodyGyro.P = 9e4
                    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    BodyGyro.cframe = T.CFrame
                    BodyVelocity.velocity = Vector3.new(0, 0, 0)
                    BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
                    spawn(function()
                        repeat wait()
                            LP.Character.Humanoid.PlatformStand = true
                                if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
                                    SPEED = 500
                                elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
                                    SPEED = 0
                                end
                                if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
                                    BodyVelocity.velocity =
                                        ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) +
                                        ((Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) -
                                            Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                    S2 = {
                                        F = S.F,
                                        B = S.B,
                                        L = S.L,
                                        R = S.R
                                    }
                                elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
                                    BodyVelocity.velocity =
                                        ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) +
                                        ((Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) -
                                            Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                else
                                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                                end
                                BodyGyro.cframe = Workspace.CurrentCamera.CoordinateFrame
                            until not getgenv().Fly
                            S = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            S2 = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            SPEED = 0
                            BodyGyro:destroy()
                            BodyVelocity:destroy()
                            LP.Character.Humanoid.PlatformStand = false
                        end
                    )
                end
                Mouse.KeyDown:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 1
                        elseif k:lower() == "s" then
                            S.B = -1
                        elseif k:lower() == "a" then
                            S.L = -1
                        elseif k:lower() == "d" then
                            S.R = 1
                        end
                    end
                )
                Mouse.KeyUp:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 0
                        elseif k:lower() == "s" then
                            S.B = 0
                        elseif k:lower() == "a" then
                            S.L = 0
                        elseif k:lower() == "d" then
                            S.R = 0
                        end
                    end
                )
                FLY()
                if Max == 2 then
                    getgenv().Fly = false
                    Max = 0
                end
            end
        end
    end
)
end})
Toggles.aaS:OnChanged(function()
    Sex = Toggles.aaS.Value 
end)


RightGroupBox:AddButton('ServerHop', function() ServerHop() end)
RightGroupBox:AddButton('Rejoin', function() 
    local Success, ErrorMessage = pcall(function()
        Rejoin()
    end)
    if ErrorMessage and not Success then
        warn(ErrorMessage)
    elseif Success and not ErrorMessage then
        print(Success)
    end
end)
-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = "RightControl", NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind 
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings() 
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
ThemeManager:SetFolder('Roxsploit Hub')
SaveManager:SetFolder("Roxsploit Hub/" .. game.PlaceId)
SaveManager:BuildConfigSection(Tabs['UI Settings']) 
ThemeManager:ApplyToTab(Tabs['UI Settings'])
