UserInputService.InputBegan:Connect(function(Input, GPE)
    if Input.KeyCode == Enum.KeyCode.LeftShift and Sp then
        VG.IsA(Player.Character, "Humanoid").WalkSpeed = 25
    end
end)
UserInputService.InputEnded:Connect(function(Input, GPE)
    if Input.KeyCode == Enum.KeyCode.LeftShift and Sp then
        VG.IsA(Player.Character, "Humanoid").WalkSpeed = 16
    end
end)

local Emotes = getrenv()._G.Database.Emotes
local New = {}
for i,v in next, Emotes do
    if not table.find(New, i) and not rawget(v, "Type") then
        table.insert(New, i)
    end
end
local GetRole = function(Role, True)
    local Target = nil
    local Table = game:GetService("ReplicatedStorage").Remotes.Extras.GetPlayerData:InvokeServer()
    for i,v in next, Table do
        if v.Role == Role and not True then
            Target = i
        elseif True and v.Role == "Innocent" and i == Player.Name then
            Target = i
        end
    end
    return Target
end
local KillAll = function(v)
    if GetRole("Murderer", false) == Player.Name then
        if VG.GetTool("Knife") then
            VG.GetTool("Knife")
        elseif VG.FFD(Player.PlayerGui, "CashBag").Visible then
            VG.ChangeCFrame(Player, CFrame.new(0,90000000000,0))
            Player.Character.Knife.Stab:FireServer("Slash")
            firetouchinterest(v.Character.HumanoidRootPart, Player.Character.Knife.Handle, 1)
            firetouchinterest(v.Character.HumanoidRootPart, Player.Character.Knife.Handle, 0)
        end
    end
end

local Nocliper = function()
    for i,v in next, Player.Character:GetChildren() do
        if v:IsA("BasePart") then
            v.CanCollide = false
            v.Velocity = Vector3.new(0, 0, 0)
        end
    end
end

local ShootMurderer = function(v)
    if (GetRole("Sheriff", false) == Player.Name or GetRole("Hero", false) == Player.Name) and VG.FFD(Player.PlayerGui, "CashBag").Visible then
        if GetRole("Murderer", false) == v.Name then
            VG.GetTool("Gun")
            VG.ChangeCFrame(Player, VG.GetCFrame(v.Character) * CFrame.new(0,0,5))
            Player.Character.Gun.KnifeServer.ShootGun:InvokeServer(1, VG.GetPosition(v.Character), "AH")
            VG.ChangeCFrame(Player, CFrame.new(0,500000,0))
        end
    end
end

local CollectCoin = function()
    if GetRole("Innocent", true) == Player.Name then
        local TargetCoin
        local Map = VG.FFD(Workspace, "CoinContainer")
        if Map then
            for i,v in next, Map:GetChildren() do
                if VG.FFD(v, "Coin") and VG.FFD(Player.PlayerGui, "CashBag").Visible then
                    if v.Name ~= "CollectedCoin" and v.Coin.Transparency == 0 and Num then
                        VG.ChangeCFrame(Player, v.CFrame)
                        wait(.5)
                        VG.ChangeCFrame(Player, CFrame.new(0,500000,0))
                        wait(2)
                    end
                end
            end
        end
    end
end

local Trade = function(Player)
    ReplicatedStorage.Trade.SendRequest:InvokeServer(Player)
end

local ForceTrade = function(Player)
    Trade(Player)
    ReplicatedStorage.Trade.AcceptRequest:FireServer()
end

local Trap = function(CFrame)
    ReplicatedStorage.TrapSystem.PlaceTrap:InvokeServer(CFrame)
end
local Version = {}
local Rules = {
    ["Murderer"] = Color3.new(255,0,0),
    ["Innocent"] = Color3.new(0,255,0),
    ["Hero"] = Color3.new(255, 255, 0),
    ["Sheriff"] = Color3.new(0, 0, 255),
}

local Help = function(v)
    local H = Instance.new("Highlight")
    H.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    VG.Protect(H)
    H.FillColor = Color3.new(0,255,0)
    Version[v] = H
    H.Parent = v.Character
    local function Help2(v)
        H.Adornee = v
    end

    v.CharacterAdded:Connect(Help2)
    do
        if v.Character then
            Help2(v.Character)
        end
    end
end

local Update = function(v)
    local H = Version[v]
    if v.Name == GetRole("Murderer") then
        H.FillColor = Rules["Murderer"]
    end
    if v.Name == GetRole("Hero") then
        H.FillColor = Rules["Hero"]
    end
    if v.Name == GetRole("Sheriff") then
        H.FillColor = Rules["Sheriff"]
    end
    if v.Name == GetRole("Innocent") then
        H.FillColor = Rules["Innocent"]
    end
end

local Rules = {
    ["Murderer"] = Color3.new(255,0,0),
    ["Innocent"] = Color3.new(0,255,0),
    ["Hero"] = Color3.new(255, 255, 0),
    ["Sheriff"] = Color3.new(0, 0, 255),
}
spawn(function()
    while wait() do
        pcall(function()
            for i, v in next, Players:GetPlayers() do
                if v ~= Player then
                    local h = VG.IsA(v.Character, "Highlight")
                    if not h and ESP then
                        Help(v)
                    end
                    if h and ESP then
                        Update(v)
                    end
                    if h and not ESP then
                        h:Destroy()
                    end
                end
            end
        end)
    end
end)

local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Window = Library:CreateWindow({
    Title = MarketplaceService:GetProductInfo(game.PlaceId).Name,
    Center = true,
    AutoShow = true,
})
local Tabs = {
    Main = Window:AddTab('Main'),
    Misc = Window:AddTab("Trap"),
    Events = Window:AddTab("Trade"),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('')
local LeftGroupBox2 = Tabs.Main:AddLeftGroupbox("")
local RightGroupBox = Tabs.Main:AddRightGroupbox('')
local RightGroupBox2 = Tabs.Main:AddRightGroupbox("")
local LeftBox = Tabs.Misc:AddLeftGroupbox('')
local RightBox = Tabs.Misc:AddRightGroupbox('')
local LeftEventGroupBox = Tabs.Events:AddLeftGroupbox('')
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

LeftGroupBox:AddToggle('Sprind', {Text = 'Shift Sprint', Default = false,Tooltip = '', Callback = function(A)
    Sp = A
end})
Toggles.Sprind:OnChanged(function(State)
    Sp = Toggles.Sprind.Value
end)
LeftGroupBox:AddButton('Blurt Roles', function()
    if GetRole("Murderer", false) ~= Player.Name then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(GetRole("Murderer", false) .. " is the Murderer","normalchat")
    elseif GetRole("Murderer", false) == Player.Name then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(tostring(Players:GetPlayers()[math.random(1, #Players:GetPlayers())]) .. " is the Murderer","normalchat")
    end

    if GetRole("Sheriff", false) ~= Player.Name then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(GetRole("Sheriff", false) .. " is the Sheriff","normalchat")
    elseif GetRole("Sheriff", false) == Player.Name then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(tostring(Players:GetPlayers()[math.random(1, #Players:GetPlayers())]) .. " is the Sheriff","normalchat")
    end
end)

LeftGroupBox:AddToggle('ShootMurderer', {Text = 'Shoot Murderer', Default = false,Tooltip = '', Callback = function(A)
    d2 = A
    spawn(function()
        while wait() and d2 do
            pcall(function()
                for i,v in next, Players:GetPlayers() do
                    if v ~= Player then
                        ShootMurderer(v)
                    end
                end
            end)
        end
    end)
end})
Toggles.ShootMurderer:OnChanged(function(State)
    d2 = Toggles.ShootMurderer.Value
end)

LeftGroupBox:AddToggle('Kil', {Text = 'Murderer Kill All', Default = false,Tooltip = '', Callback = function(A)
    Kill = A
    spawn(function()
        while wait() and Kill do
            pcall(function()
                for i,v in next, Players:GetPlayers() do
                    if v ~= Player then
                        KillAll(v)
                    end
                end
            end)
        end
    end)
end})
Toggles.Kil:OnChanged(function(State)
    Kill = Toggles.Kil.Value
end)

LeftGroupBox:AddToggle('wil', {Text = 'Coin Farm', Default = false,Tooltip = '', Callback = function(A)
    Num = A
    spawn(function()
        while wait() and Num do
            pcall(function()
                CollectCoin()
            end)
        end
    end)
end})
Toggles.wil:OnChanged(function(State)
    Num = Toggles.wil.Value
end)

LeftGroupBox:AddToggle('sw', {Text = 'Grab Gun', Default = false,Tooltip = '', Callback = function(A)
    s1 = A
    spawn(function()
        while wait() and s1 do
            pcall(function()
                VG.ChangeCFrame(Player, Workspace:FindFirstChild("GunDrop").CFrame)
            end)
        end
    end)
end})
Toggles.sw:OnChanged(function(State)
    s1 = Toggles.sw.Value
end)

LeftBox:AddToggle('Hack', {Text = 'Trap Selected Players', Default = false,Tooltip = '', Callback = function(A)
    Hack = A
    spawn(function()
        while wait() and Hack do
            pcall(function()
                Trap(VG.GetCFrame(Players[hacker].Character))
            end)
        end
    end)
end})

LeftBox:AddDropdown('MyPlayerDropdown', {SpecialType = 'Player',Text = 'Players',Tooltip = '',Callback = function(Value)
    hacker = Value
end})

LeftEventGroupBox:AddToggle('eeeee', {Text = 'Spam Request Trade Selected Player', Default = false,Tooltip = '', Callback = function(A)
    Hijack = A
    spawn(function()
        while wait() and Hijack do
            pcall(function()
                Trade(Players[Person])
            end)
        end
    end)
end})

LeftEventGroupBox:AddToggle('efeeee', {Text = 'Force Trade Selected Player', Default = false,Tooltip = '', Callback = function(A)
    Expl = A
    spawn(function()
        while wait() and Expl do
            pcall(function()
                ForceTrade(Players[Person])
            end)
        end
    end)
end})

LeftEventGroupBox:AddDropdown('MyPlayerDropdown', {SpecialType = 'Player',Text = 'Players',Tooltip = '',Callback = function(Value)
    Person = Value
end})

LeftGroupBox:AddButton('Play Selected Emote', function()
    ReplicatedStorage.Remotes.Misc.PlayEmote:Fire(Key or "floss")
end)

LeftGroupBox:AddLabel('Play Selected Emote KeyBind'):AddKeyPicker('Aa', {Default = 'R',SyncToggleState = false,Mode = 'Toggle',Text = 'Emote Keybind',NoUI = true,Callback = function(Value)
    ReplicatedStorage.Remotes.Misc.PlayEmote:Fire(Key or "floss")
end,
ChangedCallback = function(New)
    print(New)
end})

LeftGroupBox:AddDropdown('MyDropdown', {Values = New,Default = 1,Multi = false,Text = 'Emote',Tooltip = 'A emotes Table',Callback = function(Value)
    Key = Value
end})

Options.MyDropdown:OnChanged(function()
    Key = Options.MyDropdown.Value
end)

LeftGroupBox:AddToggle('ESP1', {Text = 'Esp Toggle', Default = false,Tooltip = '', Callback = function(A)
    ESP = A
end})
Toggles.ESP1:OnChanged(function(State)
    ESP = Toggles.ESP1.Value
end)



RightGroupBox:AddToggle('SSS', {Text = 'WalkSpeed Toggle',Default = false,Tooltip = '', Callback = function(A)
    WS = A
    RunService.Stepped:Connect(function()
        if WS then
            pcall(function()
                Player.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed = WalkSpeed or 16
            end)
        end
    end)
end})
Toggles.SSS:OnChanged(function(State)
    Foe = Toggles.SSS.Value
end)
RightGroupBox:AddInput('SSF3', {Default = 'WalkSpeed',Numeric = true,Finished = false,Text = 'WalkSpeed',Tooltip = 'Numbers Only',Placeholder = 'WalkSpeed'})
Options.SSF3:OnChanged(function(State)
    WalkSpeed = Options.SSF3.Value
end)

RightGroupBox:AddToggle('EEE', {Text = 'JumpPower Toggle',Default = false,Tooltip = '', Callback = function(A)
    JP = A
    RunService.Stepped:Connect(function()
        if JP then
            pcall(function()
                local H = Player.Character:FindFirstChildWhichIsA("Humanoid")
                if H.UseJumpPower then
                    H.JumpPower = JumpPower or 50
                else
                    H.JumpHeight = JumpPower or 50
                end
            end)
        end
    end)
end})
Toggles.EEE:OnChanged(function(State)
    JP = Toggles.EEE.Value
end)
RightGroupBox:AddInput('SSF1', {Default = 'JumpPower',Numeric = true,Finished = false,Text = 'JumpPower',Tooltip = 'Numbers Only',Placeholder = 'JumpPower'})

Options.SSF1:OnChanged(function(State)
    JumpPower = Options.SSF1.Value
end)

RightGroupBox:AddSlider('FlySpeed', {Text = 'FlySpeed',Default = 50,Min = 16,Max = 500,Rounding = 0,Compact = false,Callback = function(Value)
    Speed = Value
end})

Options.FlySpeed:OnChanged(function()
    Speed = Options.FlySpeed.Value
end)

RightGroupBox:AddLabel('Fly KeyBind'):AddKeyPicker('name2', {Default = 'H',SyncToggleState = false,Mode = 'Toggle',Text = 'Fly',NoUI = true,Callback = function(Value)
    VG.Flying(Value, Speed)
end,
ChangedCallback = function(New)
    print(New)
end})
Options.name2:SetValue({ 'H', 'Toggle' })

RightGroupBox:AddButton('ServerHop', function() ServerHop() end)
RightGroupBox:AddButton('Rejoin', function()
    local Success, ErrorMessage = pcall(function()
        Rejoin()
    end)
    if ErrorMessage and not Success then
        warn(ErrorMessage)
    elseif Success and not ErrorMessage then
        print(Success)
    end
end)
Library:SetWatermarkVisibility(true)
local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = RenderStepped:Connect(function()
    FrameCounter =FrameCounter + 1;
    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;
    Library:SetWatermark(('Roxsploit Hub | %s fps | %s ms | %s GameId'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue()),  game.GameId
    ));
end);

MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = "RightControl", NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('Roxsploit Hub')
SaveManager:SetFolder("Roxsploit Hub/" .. game.PlaceId)
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
            
